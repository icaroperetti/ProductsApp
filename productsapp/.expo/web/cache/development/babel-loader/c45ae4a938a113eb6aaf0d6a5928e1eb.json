{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\icaro\\\\Dropbox\\\\Faculdade\\\\LPG3\\\\aulas\\\\src\\\\screens\\\\Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport firebase from \"../database/firebaseConfig\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState } from \"react\";\n\nvar Login = function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function getUser() {\n    var userRef, snapshot, users;\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userRef = firebase.db.collection('users');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(userRef.get());\n\n          case 3:\n            snapshot = _context.sent;\n            users = snapshot.docs.map(function (doc) {\n              console.log(doc.id);\n              console.log(doc.data());\n              return userId = doc.id;\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var signIn = function signIn() {\n    console.log(\"Users\", users.userId);\n\n    if (users.userId == email) {\n      props.navigator.navigate('Task');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Fa\\xE7a login para continuar\"), React.createElement(TextInput, {\n    mode: \"flat\",\n    style: styles.input,\n    placeholder: \"E-mail\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    mode: \"flat\",\n    style: styles.input,\n    placeholder: \"Senha\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    style: styles.loginBtn,\n    mode: \"contained\",\n    onPress: function onPress() {\n      signIn();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Entrar\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '94%',\n    marginRight: '2%',\n    marginLeft: '2%',\n    paddingTop: 100\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#7159C1',\n    marginTop: 50,\n    marginBottom: 40,\n    borderRadius: 10,\n    paddingLeft: 20\n  },\n  input: {\n    marginTop: 20,\n    paddingLeft: 10,\n    backgroundColor: 'whitesmoke'\n  },\n  loginBtn: {\n    marginTop: 30,\n    width: 150,\n    alignSelf: 'flex-end'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/icaro/Dropbox/Faculdade/LPG3/aulas/src/screens/Login.js"],"names":["TextInput","Button","firebase","React","useState","Login","props","email","setEmail","password","setPassword","getUser","userRef","db","collection","get","snapshot","users","docs","map","doc","console","log","id","data","userId","signIn","navigator","navigate","styles","container","title","input","loginBtn","StyleSheet","create","width","marginRight","marginLeft","paddingTop","fontSize","fontWeight","color","marginTop","marginBottom","borderRadius","paddingLeft","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import {TextInput,Button} from \"react-native-paper\";\nimport firebase from \"../database/firebaseConfig\";\nimport {View,StyleSheet,Text} from \"react-native\";\nimport React, { useState } from \"react\";\n\n   const Login = (props) => {\n    let [email,setEmail] = useState('');\n    let [password,setPassword] = useState('');\n\n    \n   async function getUser(){\n    const userRef = firebase.db.collection('users');\n    const snapshot = await userRef.get();\n\n    let users = snapshot.docs.map(doc => {\n        console.log(doc.id)\n        console.log(doc.data())\n        return userId = doc.id;\n      })  \n   }\n\n   const signIn = () => {\n       \n       console.log(\"Users\",users.userId)\n       if(users.userId == email){\n           props.navigator.navigate('Task');\n       }\n   }\n\n    return (\n        <View style={styles.container}>\n        <Text style= {styles.title}>Fa√ßa login para continuar</Text>\n            <TextInput\n                mode = \"flat\"\n                style={styles.input}\n                placeholder=\"E-mail\"\n                // defaultValue={}\n                onChangeText={(email) => setEmail(email)}\n            />\n\n            <TextInput \n                mode = \"flat\"\n                style={styles.input}\n                placeholder=\"Senha\"\n                // defaultValue={}\n                onChangeText={(password) => setPassword(password)}  \n                secureTextEntry={true}\n            />       \n                \n            <Button style={styles.loginBtn} mode=\"contained\" onPress={() => {signIn()}}>\n                Entrar\n            </Button>\n        \n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container:{\n      width:'94%',\n      marginRight:'2%',\n      marginLeft:'2%',\n      paddingTop:100\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        color:'#7159C1',\n        marginTop: 50, \n        marginBottom: 40,\n        borderRadius: 10,\n        paddingLeft:20,\n    },\n    input:{\n      marginTop:20,\n      paddingLeft:10,\n      backgroundColor:'whitesmoke',\n    },\n    loginBtn:{\n        marginTop:30,\n        width:150,\n        alignSelf: 'flex-end'\n    }\n  });\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}