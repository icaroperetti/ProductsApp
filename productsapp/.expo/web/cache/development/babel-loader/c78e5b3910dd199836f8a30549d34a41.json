{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\icaro\\\\Dropbox\\\\Faculdade\\\\LPG3\\\\aulas\\\\src\\\\screens\\\\TaskScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TextInput, Button, List } from \"react-native-paper\";\nimport TaskItem from \"../components/TaskItem\";\nimport firebase from \"../database/firebaseConfig\";\n\nvar TaskScreen = function TaskScreen(props) {\n  var params = props.navigation.state.params;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  useEffect(function () {\n    function getTasks() {\n      var taskRef, snapshot, tasks;\n      return _regeneratorRuntime.async(function getTasks$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              taskRef = firebase.db.collection('tasks');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(taskRef.get());\n\n            case 3:\n              snapshot = _context.sent;\n              tasks = snapshot.docs.map(function (doc) {\n                console.log(doc.id);\n                console.log(doc.data());\n                return task = _objectSpread({\n                  id: doc.id\n                }, doc.data());\n              });\n              setTasks(tasks);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getTasks();\n  }, [params]);\n\n  var removeTask = function removeTask(id) {\n    firebase.db.collection('tasks').doc(id).delete();\n    setTasks(function (old) {\n      return old.filter(function (item) {\n        return item.id !== id;\n      });\n    });\n  };\n\n  function newTask() {\n    var date, day, month, year, formatted_date, res;\n    return _regeneratorRuntime.async(function newTask$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            date = new Date();\n            day = date.getDate();\n            month = date.getMonth() + 1;\n            year = date.getFullYear();\n            formatted_date = day + \"/\" + month + \"/\" + year;\n            setDescription('');\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"tasks\").add({\n              date: formatted_date,\n              description: description\n            }));\n\n          case 8:\n            res = _context2.sent;\n            setTasks(function (old) {\n              return [].concat(_toConsumableArray(old), [{\n                id: res.id,\n                description: description,\n                date: formatted_date\n              }]);\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    mode: \"outlined\",\n    style: styles.description,\n    placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n    value: description,\n    onChangeText: function onChangeText(newValue) {\n      return setDescription(newValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    style: styles.taskBtn,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return newTask();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Cadastrar tarefa\"), React.createElement(FlatList, {\n    style: styles.tasksList,\n    data: tasks,\n    renderItem: function renderItem(element) {\n      return React.createElement(React.Fragment, null, React.createElement(TaskItem, {\n        key: element.index,\n        task: element.item,\n        removeTask: removeTask,\n        navigation: props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '96%',\n    marginRight: '2%',\n    marginLeft: '2%'\n  },\n  description: {\n    marginTop: 20\n  },\n  tasksList: {\n    marginTop: 20\n  },\n  taskBtn: {\n    marginTop: 20\n  },\n  icon: {\n    marginTop: 5\n  }\n});\nexport default TaskScreen;","map":{"version":3,"sources":["D:/icaro/Dropbox/Faculdade/LPG3/aulas/src/screens/TaskScreen.js"],"names":["React","useEffect","useState","TextInput","Button","List","TaskItem","firebase","TaskScreen","props","params","navigation","state","tasks","setTasks","description","setDescription","getTasks","taskRef","db","collection","get","snapshot","docs","map","doc","console","log","id","data","task","removeTask","delete","old","filter","item","newTask","date","Date","day","getDate","month","getMonth","year","getFullYear","formatted_date","add","res","styles","container","newValue","taskBtn","tasksList","element","index","StyleSheet","create","width","marginRight","marginLeft","marginTop","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  FlatList,\n} from \"react-native\";\n\n//import { FontAwesome } from '@expo/vector-icons';\nimport { TextInput,Button,List } from \"react-native-paper\";\nimport TaskItem from \"../components/TaskItem\";\nimport firebase from \"../database/firebaseConfig\";\n\nconst TaskScreen = (props) => {\n  const params = props.navigation.state.params;\n  // Quando um estado do componente ou do pai dele mudar ele atualiza.\n  let [tasks, setTasks] = useState([]);\n  let [description, setDescription] = useState('');\n\n  // ele executa a função quando alguma coisa no array atualiza\n  \n  useEffect(() => {\n    // console.log('useeffectchamado');\n    async function getTasks(){\n      const taskRef = firebase.db.collection('tasks');\n      const snapshot = await taskRef.get();\n    \n      let tasks = snapshot.docs.map(doc => {\n        console.log(doc.id)\n        console.log(doc.data())\n        return task = {id: doc.id, ...doc.data()}\n      })\n      \n      setTasks(tasks);\n    }\n    getTasks();\n  }, [params])\n\n  const removeTask = (id) => {\n    firebase.db.collection('tasks').doc(id).delete();\n    setTasks(old => old.filter(item => item.id !== id));\n  };\n\n\n  async function newTask() {\n    let date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n\n    let formatted_date = `${day}/${month}/${year}`;\n    \n    setDescription('');\n\n    const res = await firebase.db.collection(\"tasks\").add({\n      date: formatted_date,\n      description: description\n    });\n    setTasks(old => [...old, {\n      id:res.id,\n      description: description,\n      date:formatted_date\n    }])\n  };\n\n  // key -> Quando tem um loop (renderizando algo na dom)\n  //Props\n  return (\n    <View style={styles.container}>\n      <TextInput\n        mode = \"outlined\"\n        style={styles.description}\n        placeholder=\"Descrição da tarefa\"\n        value={description}\n        onChangeText={(newValue) => setDescription(newValue)}\n      />\n      <Button style={styles.taskBtn} mode=\"contained\" onPress={() => newTask()}>\n        Cadastrar tarefa\n      </Button>\n\n      <FlatList\n        style={styles.tasksList}\n        data={tasks}\n        renderItem={(element) => {\n          return (\n            <>\n              <TaskItem key={element.index} task={element.item} removeTask={removeTask} navigation={props.navigation}/>\n            </>\n          );\n        }}\n      />\n\n    \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container:{\n    width:'96%',\n    marginRight:'2%',\n    marginLeft:'2%'\n  },\n  description:{\n    marginTop:20,\n  },\n  tasksList: {\n    marginTop: 20,\n  },\n  taskBtn: {\n    marginTop: 20,\n  },\n  icon:{\n    marginTop:5\n  }\n});\n\nexport default TaskScreen;\n"]},"metadata":{},"sourceType":"module"}